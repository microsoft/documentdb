name: Build RPM packages
concurrency:
  group: build-rpm-packages-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths-ignore:
      - '.devcontainer/**'
      - '*.md'
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - 'packaging/**'
      - 'scripts/**'


jobs:
  build-rpm-packages:
    runs-on: ${{ matrix.runner }}
    name: ${{ matrix.os }}-${{ matrix.arch }}-pg${{ matrix.pg_version }}
    strategy:
      fail-fast: false
      matrix:
        os: [rhel8, rhel9]
        arch: [amd64]
        include:
          - arch: amd64
            runner: ubuntu-24.04
        pg_version:
          - 16
          - 17

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract and Format Default Version
        id: extract_version
        run: |
          DOCUMENTDB_VERSION=$(grep -E "^default_version" pg_documentdb_core/documentdb_core.control | sed -E "s/.*'([0-9]+\.[0-9]+-[0-9]+)'.*/\1/")
          DOCUMENTDB_VERSION=$(echo $DOCUMENTDB_VERSION | sed "s/-/./g")
          echo "Extracted Version: $DOCUMENTDB_VERSION"
          echo "DOCUMENTDB_VERSION=$DOCUMENTDB_VERSION" >> $GITHUB_ENV

      - name: Build RPM Package
        run: |
          ./packaging/build_packages.sh --os ${{ matrix.os }} --pg ${{ matrix.pg_version }} --version ${{ env.DOCUMENTDB_VERSION }} --test-clean-install

      - name: Sign RPM packages
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          # Install RPM signing tools
          sudo apt-get update && sudo apt-get install -y rpm gnupg2
          
          # Generate a temporary signing key for demo purposes
          # In production, use proper key management with secure key storage
          cat > /tmp/gpg-batch <<EOF
          %echo Generating DocumentDB RPM signing key
          Key-Type: RSA
          Key-Length: 2048
          Subkey-Type: RSA
          Subkey-Length: 2048
          Name-Real: DocumentDB RPM Package Signing
          Name-Email: documentdb@noreply.github.com
          Expire-Date: 1y
          %no-ask-passphrase
          %no-protection
          %commit
          %echo done
          EOF
          
          gpg --batch --generate-key /tmp/gpg-batch
          
          # Configure RPM signing
          echo "%_gpg_name DocumentDB RPM Package Signing" >> ~/.rpmmacros
          echo "%_gpg_path /home/runner/.gnupg" >> ~/.rpmmacros # GPG home directory
          echo "%_signature gpg" >> ~/.rpmmacros
          echo "%__gpg_sign_cmd %{__gpg} gpg --force-v3-sigs --batch --verbose --no-armor --passphrase-fd 3 --no-secmem-warning -u \"%{_gpg_name}\" -sbo %{__signature_filename} --digest-algo sha256 %{__plaintext_filename}" >> ~/.rpmmacros
          
          # Sign all RPM packages
          for rpm_file in packaging/*.rpm; do
            if [[ -f "$rpm_file" ]]; then
              echo "Signing RPM package: $rpm_file"
              # Ensure the GPG agent is running if needed, though --batch might handle it
              rpm --addsign "$rpm_file"
            fi
          done
          
          # Export public key for verification
          # Ensure the email matches the one used in Name-Email for key generation
          gpg --armor --export "DocumentDB RPM Package Signing" > packaging/documentdb-rpm-signing-key.asc

      - name: Upload RPM Package as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}-pg${{ matrix.pg_version }}-documentdb-${{ env.DOCUMENTDB_VERSION }}
          path: |
            packaging/*.rpm
            packaging/documentdb-rpm-signing-key.asc
          retention-days: 7
          if-no-files-found: error
          compression-level: 0
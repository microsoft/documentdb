set search_path to helio_core,helio_api,helio_api_catalog,pg_catalog;
SET citus.next_shard_id TO 1500000;
SET helio_api.next_collection_id TO 1500;
SET helio_api.next_collection_index_id TO 1500;
SELECT helio_api.drop_collection('db', 'queryregexopstest') IS NOT NULL;
 ?column? 
---------------------------------------------------------------------
 t
(1 row)

SELECT helio_api.create_collection('db', 'queryregexopstest');
NOTICE:  creating collection
 create_collection 
---------------------------------------------------------------------
 t
(1 row)

-- Create a wildcard index by using CREATE INDEX command instead of
-- using helio_api_internal.create_indexes_non_concurrently. This is because, we will use
-- that index to test whether we can use the index via query operators
-- other than "@@".
SELECT helio_api_internal.create_indexes_non_concurrently('db', helio_distributed_test_helpers.generate_create_index_arg('queryregexopstest', 'index_2', '{"$**": 1}'), TRUE);
                                                                                                   create_indexes_non_concurrently                                                                                                    
---------------------------------------------------------------------
 { "raw" : { "defaultShard" : { "numIndexesBefore" : { "$numberInt" : "1" }, "numIndexesAfter" : { "$numberInt" : "2" }, "createdCollectionAutomatically" : false, "ok" : { "$numberInt" : "1" } } }, "ok" : { "$numberInt" : "1" } }
(1 row)

-- avoid plans that use the primary key index
SELECT helio_distributed_test_helpers.drop_primary_key('db','queryregexopstest');
 drop_primary_key 
---------------------------------------------------------------------
 
(1 row)

SELECT helio_api.drop_collection('db', 'querytextopstest') IS NOT NULL;
 ?column? 
---------------------------------------------------------------------
 t
(1 row)

SELECT helio_api.create_collection('db', 'querytextopstest');
NOTICE:  creating collection
 create_collection 
---------------------------------------------------------------------
 t
(1 row)

-- avoid plans that use the primary key index
SELECT helio_distributed_test_helpers.drop_primary_key('db','querytextopstest');
 drop_primary_key 
---------------------------------------------------------------------
 
(1 row)

BEGIN;
-- avoid sequential scan (likely to be preferred on small tables)
set local enable_seqscan = off;
set local helio_api.forceUseIndexIfAvailable to on;
\i sql/bson_dollar_ops_basic_text_ops_tests_explain_core.sql
/* validate explain */
EXPLAIN (COSTS OFF) SELECT object_id, document FROM helio_api.collection('db','queryregexopstest') WHERE document @~ '{ "a.b": "^.+$" }';
                                                   QUERY PLAN                                                    
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Bitmap Heap Scan on documents_1500_1500007 collection
               Recheck Cond: (document OPERATOR(helio_api_catalog.@~) '{ "a.b" : "^.+$" }'::helio_core.bson)
               ->  Bitmap Index Scan on index_2
                     Index Cond: (document OPERATOR(helio_api_catalog.@~) '{ "a.b" : "^.+$" }'::helio_core.bson)
(9 rows)

END;

SET search_path TO documentdb_core,documentdb_api,documentdb_api_catalog,documentdb_api_internal;
SET citus.next_shard_id TO 1064000;
SET documentdb.next_collection_id TO 10640;
SET documentdb.next_collection_index_id TO 10640;
SET documentdb.enableNewCompositeIndexOpClass to on;
set enable_seqscan TO on;
set documentdb.forceUseIndexIfAvailable to on;
set documentdb.forceDisableSeqScan to off;
SELECT documentdb_api.drop_collection('comp_elmdb', 'cmp_elemmatch_ops') IS NOT NULL;
 ?column? 
---------------------------------------------------------------------
 t
(1 row)

SELECT documentdb_api.create_collection('comp_elmdb', 'cmp_elemmatch_ops') IS NOT NULL;
NOTICE:  creating collection
 ?column? 
---------------------------------------------------------------------
 t
(1 row)

SELECT documentdb_api_internal.create_indexes_non_concurrently('comp_elmdb',
    '{ "createIndexes": "cmp_elemmatch_ops", "indexes": [ { "key": { "score": 1 }, "name": "score_1", "enableCompositeTerm": true }, { "key": { "results": 1 }, "name": "results_1", "enableCompositeTerm": true } ] }', TRUE);
                                                                                                   create_indexes_non_concurrently                                                                                                    
---------------------------------------------------------------------
 { "raw" : { "defaultShard" : { "numIndexesBefore" : { "$numberInt" : "1" }, "numIndexesAfter" : { "$numberInt" : "3" }, "createdCollectionAutomatically" : false, "ok" : { "$numberInt" : "1" } } }, "ok" : { "$numberInt" : "1" } }
(1 row)

SELECT documentdb_api_internal.create_indexes_non_concurrently('comp_elmdb',
    '{ "createIndexes": "cmp_elemmatch_ops", "indexes": [ { "key": { "results.product": 1 }, "name": "results.product_1", "enableCompositeTerm": true }, { "key": { "results.safety": 1 }, "name": "results.safety_1", "enableCompositeTerm": true } ] }', TRUE);
                                                                                                   create_indexes_non_concurrently                                                                                                    
---------------------------------------------------------------------
 { "raw" : { "defaultShard" : { "numIndexesBefore" : { "$numberInt" : "3" }, "numIndexesAfter" : { "$numberInt" : "5" }, "createdCollectionAutomatically" : false, "ok" : { "$numberInt" : "1" } } }, "ok" : { "$numberInt" : "1" } }
(1 row)

SELECT documentdb_api.insert_one('comp_elmdb', 'cmp_elemmatch_ops', '{ "_id": 1, "score": [ 80, 90, 70 ] }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('comp_elmdb', 'cmp_elemmatch_ops', '{ "_id": 2, "score": [ 75, 86, 89 ] }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- pushes to the score index
EXPLAIN (COSTS OFF, ANALYZE ON, TIMING OFF, SUMMARY OFF) SELECT document FROM bson_aggregation_find('comp_elmdb',
    '{ "find": "cmp_elemmatch_ops", "filter": { "score": { "$elemMatch": { "$gt": 80, "$lt": 85 } } } }');
                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------
 Bitmap Heap Scan on documents_10641_1064002 collection (actual rows=0 loops=1)
   Filter: (document @#? '{ "score" : { "$gt" : { "$numberInt" : "80" }, "$lt" : { "$numberInt" : "85" } } }'::bson)
   Rows Removed by Filter: 2
   Heap Blocks: exact=1
   ->  Bitmap Index Scan on score_1 (actual rows=2 loops=1)
         Index Cond: ((document @> '{ "score" : { "$numberInt" : "80" } }'::bson) AND (document @< '{ "score" : { "$numberInt" : "85" } }'::bson))
(6 rows)

EXPLAIN (COSTS OFF, ANALYZE ON, TIMING OFF, SUMMARY OFF) SELECT document FROM bson_aggregation_find('comp_elmdb',
    '{ "find": "cmp_elemmatch_ops", "filter": { "score": { "$elemMatch": { "$in": [ 80, 86 ], "$gt": 81 } } } }');
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------
 Bitmap Heap Scan on documents_10641_1064002 collection (actual rows=1 loops=1)
   Filter: (document @#? '{ "score" : { "$in" : [ { "$numberInt" : "80" }, { "$numberInt" : "86" } ], "$gt" : { "$numberInt" : "81" } } }'::bson)
   Rows Removed by Filter: 1
   Heap Blocks: exact=1
   ->  Bitmap Index Scan on score_1 (actual rows=2 loops=1)
         Index Cond: ((document @*= '{ "score" : [ { "$numberInt" : "80" }, { "$numberInt" : "86" } ] }'::bson) AND (document @> '{ "score" : { "$numberInt" : "81" } }'::bson))
(6 rows)

EXPLAIN (COSTS OFF, ANALYZE ON, TIMING OFF, SUMMARY OFF) SELECT document FROM bson_aggregation_find('comp_elmdb',
    '{ "find": "cmp_elemmatch_ops", "filter": { "score": { "$elemMatch": { "$type": "number" } } } }');
                                   QUERY PLAN                                   
---------------------------------------------------------------------
 Bitmap Heap Scan on documents_10641_1064002 collection (actual rows=2 loops=1)
   Filter: (document @#? '{ "score" : { "$type" : "number" } }'::bson)
   Heap Blocks: exact=1
   ->  Bitmap Index Scan on score_1 (actual rows=2 loops=1)
         Index Cond: (document @# '{ "score" : "number" }'::bson)
(5 rows)

EXPLAIN (COSTS OFF, ANALYZE ON, TIMING OFF, SUMMARY OFF) SELECT document FROM bson_aggregation_find('comp_elmdb',
    '{ "find": "cmp_elemmatch_ops", "filter": { "score": { "$elemMatch": { "$ne": 89 } } } }');
                                     QUERY PLAN                                     
---------------------------------------------------------------------
 Bitmap Heap Scan on documents_10641_1064002 collection (actual rows=2 loops=1)
   Filter: (document @#? '{ "score" : { "$ne" : { "$numberInt" : "89" } } }'::bson)
   Heap Blocks: exact=1
   ->  Bitmap Index Scan on score_1 (actual rows=2 loops=1)
         Index Cond: (document @!= '{ "score" : { "$numberInt" : "89" } }'::bson)
(5 rows)

EXPLAIN (COSTS OFF, ANALYZE ON, TIMING OFF, SUMMARY OFF) SELECT document FROM bson_aggregation_find('comp_elmdb',
    '{ "find": "cmp_elemmatch_ops", "filter": { "score": { "$elemMatch": { "$nin": [ 89, 75, 86] } } } }');
                                                                QUERY PLAN                                                                 
---------------------------------------------------------------------
 Bitmap Heap Scan on documents_10641_1064002 collection (actual rows=1 loops=1)
   Filter: (document @#? '{ "score" : { "$nin" : [ { "$numberInt" : "89" }, { "$numberInt" : "75" }, { "$numberInt" : "86" } ] } }'::bson)
   Rows Removed by Filter: 1
   Heap Blocks: exact=1
   ->  Bitmap Index Scan on score_1 (actual rows=2 loops=1)
         Index Cond: (document @!*= '{ "score" : [ { "$numberInt" : "89" }, { "$numberInt" : "75" }, { "$numberInt" : "86" } ] }'::bson)
(6 rows)

-- now test some with nested objects
SELECT documentdb_api.insert_one('comp_elmdb', 'cmp_elemmatch_ops', '{ "_id": 3, "results": [ { "product" : "fish", "safety" : 10 }, { "product" : "sugar", "safety" : 5 } ] }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('comp_elmdb', 'cmp_elemmatch_ops', '{ "_id": 4, "results": [ { "product" : "fish", "safety" : 8 }, { "product" : "sugar", "safety" : 7 } ] }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('comp_elmdb', 'cmp_elemmatch_ops', '{ "_id": 5, "results": [ { "product" : "fish", "safety" : 7 }, { "product" : "sugar", "safety" : 8 } ] }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

EXPLAIN (COSTS OFF, ANALYZE ON, TIMING OFF, SUMMARY OFF) SELECT document FROM bson_aggregation_find('comp_elmdb',
    '{ "find": "cmp_elemmatch_ops", "filter": { "results": { "$elemMatch": { "product": "fish", "safety": 7 } } } }');
                                                 QUERY PLAN                                                 
---------------------------------------------------------------------
 Bitmap Heap Scan on documents_10641_1064002 collection (actual rows=1 loops=1)
   Filter: (document @#? '{ "results" : { "product" : "fish", "safety" : { "$numberInt" : "7" } } }'::bson)
   Rows Removed by Filter: 1
   Heap Blocks: exact=1
   ->  Bitmap Index Scan on "results.safety_1" (actual rows=2 loops=1)
         Index Cond: (document @= '{ "results.safety" : { "$numberInt" : "7" } }'::bson)
(6 rows)

EXPLAIN (COSTS OFF, ANALYZE ON, TIMING OFF, SUMMARY OFF) SELECT document FROM bson_aggregation_find('comp_elmdb',
    '{ "find": "cmp_elemmatch_ops", "filter": { "results": { "$elemMatch": { "product": "fish" } } } }');
                                   QUERY PLAN                                   
---------------------------------------------------------------------
 Bitmap Heap Scan on documents_10641_1064002 collection (actual rows=3 loops=1)
   Filter: (document @#? '{ "results" : { "product" : "fish" } }'::bson)
   Heap Blocks: exact=1
   ->  Bitmap Index Scan on "results.product_1" (actual rows=3 loops=1)
         Index Cond: (document @= '{ "results.product" : "fish" }'::bson)
(5 rows)

